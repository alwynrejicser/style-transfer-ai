# Style Transfer AI - One-Line Installation Script
# This script is designed to be run via: iex ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/alwynrejicser/style-transfer-ai/main/install_one_line.ps1'))

Write-Host "🚀 Style Transfer AI - One-Line Installer" -ForegroundColor Green; Write-Host "=========================================" -ForegroundColor Green; Write-Host ""; Write-Host "📦 Installing from PyPI..." -ForegroundColor Blue; try { pip install style-transfer-ai; Write-Host "✅ Package installed!" -ForegroundColor Green } catch { Write-Host "❌ pip install failed" -ForegroundColor Red; exit 1 }; Write-Host ""; Write-Host "🔧 Configuring PATH..." -ForegroundColor Blue; $userScriptsPath = "$env:APPDATA\Python\Python313\Scripts"; $currentPath = [Environment]::GetEnvironmentVariable("PATH", "User"); if ($currentPath -like "*$userScriptsPath*") { Write-Host "✅ PATH already configured!" -ForegroundColor Green } else { try { $newPath = "$currentPath;$userScriptsPath"; [Environment]::SetEnvironmentVariable("PATH", $newPath, "User"); Write-Host "✅ PATH configured!" -ForegroundColor Green } catch { Write-Host "⚠️ PATH setup failed" -ForegroundColor Yellow } }; Write-Host ""; Write-Host "🧪 Testing..." -ForegroundColor Blue; $env:PATH = [Environment]::GetEnvironmentVariable('PATH', 'User') + ';' + [Environment]::GetEnvironmentVariable('PATH', 'Machine'); try { $cmd = Get-Command "style-transfer-ai" -ErrorAction SilentlyContinue; if ($cmd) { Write-Host "✅ Ready! Run: style-transfer-ai" -ForegroundColor Green } else { Write-Host "🔄 Restart terminal, then run: style-transfer-ai" -ForegroundColor Yellow } } catch { Write-Host "🔄 Restart terminal, then run: style-transfer-ai" -ForegroundColor Yellow }; Write-Host ""; Write-Host "🎉 Installation complete!" -ForegroundColor Green